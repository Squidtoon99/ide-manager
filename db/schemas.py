from .connection import ma
from .models import Assignment, Course, File, Project, School, User, Unit


# I wish this was autogenerated


class AssignmentSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = Assignment
        include_relationships = True
        load_instance = True
        include_fk = True


assignment_schema = AssignmentSchema()

class UnitSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = Unit
        include_relationships = True
        load_instance = True
        include_fk = True

unit_schema = UnitSchema()

class CourseSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = Course
        load_instance = True
        include_fk = True
        include_relationships = True

    featured_teacher = ma.Nested("UserSchema", only=("id", "name", "email", "image"))
    units = ma.Nested("UnitSchema", only=("id", "name", "description"), many=True)

course_schema = CourseSchema()


class FileSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = File
        load_instance = True
        include_fk = True


file_schema = FileSchema()


class ProjectSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = Project
        load_instance = True
        include_fk = True
        include_relationships = True


project_schema = ProjectSchema()


class SchoolSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = School
        load_instance = True
        include_fk = True
        include_relationships = False


school_schema = SchoolSchema()


class UserSchema(ma.SQLAlchemyAutoSchema):
    class Meta:
        model = User
        load_instance = True
        include_fk = True
        include_relationships = True  # expensive but hopefully worth it

    courses = ma.Nested(CourseSchema, many=True, only=("id", "name", "image", "join_code", "featured_teacher"))


user_schema = UserSchema()
